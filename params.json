{"name":"CSV-Sorter","tagline":"A Java command-line CSV sorting program.","body":"![CSV-Sorter](images/csvsorterlogo-small.png)\r\n\r\n# Overview\r\n\r\nThe `csvsorter `program serves to sort CSV files.\r\n\r\nIt is a Java command-line program which processes one CSV input file to one CSV output file controlled by an XML configuration file. Depending on the configuration, csvsorter can deal with different formats, separators, delimiters, various sorting presets, header and no header files.\r\n\r\nThe csvsorter program was developed as external sorting program for the [csvsimple](http://www.ctan.org/tex-archive/macros/latex/contrib/csvsimple) LaTeX-package. But it can be used for any CSV sorting task.\r\n\r\n* [Documentation](http://t-f-s.github.io/csvsorter/csvsorter.pdf)\r\n* [Binary Application (version 0.94 beta)](https://github.com/T-F-S/csvsorter/releases/download/v0.94/csvsorter_0.94.zip)\r\n* [Latest release on GitHub](https://github.com/T-F-S/csvsorter/releases/latest)\r\n\r\n\r\n# Example\r\n\r\nConsider the following CSV file named **`songcontest.csv`**:\r\n\r\n```bat\r\nTitle,Artist,Country,Televote,Juryvote\r\nLa la la la la,The Singers,United Kingdom,25,62\r\nOne and two and three,Hansi Unterober,Germany,47,35\r\nRarara,Channel Rats,Grand Fenwick,12,14\r\nThe green hills of the shire,Frodo and Friends,New Zealand,76,45\r\nParis e Calais,Chantal and Pascal,France,47,41\r\nThe bell rings,Baab,Sweden,87,24\r\n```\r\n\r\nThis CSV file is to be sorted by the sum of the\r\n`Televote `and `Juryvote `numbers in\r\ndescending order. If candidates have the same values, the\r\n`Country` is used for sorting.\r\n\r\nFor this, the following XML configuration file **`sumsort.xml`** is used:\r\n\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<csv>\r\n  <sortlines>\r\n    <sum order=\"descending\" type=\"integer\">\r\n      <column name=\"Televote\"/>\r\n      <column name=\"Juryvote\"/>\r\n    </sum>\r\n    <column name=\"Country\" order=\"ascending\" type=\"string\"/>\r\n  </sortlines>\r\n</csv>\r\n```\r\n\r\nNow, `csvsorter` is applied by \r\n\r\n**`csvsorter -c sumsort.xml -i songcontest.csv -o songcontest_sorted.csv`**\r\n\r\nThe result is the sorted file **`songcontest_sorted.csv`**:\r\n\r\n```bat\r\nTitle,Artist,Country,Televote,Juryvote\r\nThe green hills of the shire,Frodo and Friends,New Zealand,76,45\r\nThe bell rings,Baab,Sweden,87,24\r\nParis e Calais,Chantal and Pascal,France,47,41\r\nLa la la la la,The Singers,United Kingdom,25,62\r\nOne and two and three,Hansi Unterober,Germany,47,35\r\nRarara,Channel Rats,Grand Fenwick,12,14\r\n```\r\n\r\n# Example (continued for LaTeX)\r\n\r\nThe example is continued with a demonstration of on-the-fly sort in\r\n`LaTeX` documents using the \r\n[csvsimple](http://www.ctan.org/tex-archive/macros/latex/contrib/csvsimple)\r\npackage.\r\n\r\nInstead of sorting the `songcontest.csv` example beforehand, it can be\r\nsorted on-the-fly while compiling a `LaTeX` document:\r\n\r\n```latex\r\n% \\documentclass{article}\r\n% \\usepackage{array,booktabs,csvsimple}\r\n% \\begin{document}\r\n\r\n\\csvreader[sort by=sumsort.xml,\r\n  head to column names,\r\n  tabular=lllcc,\r\n  table head=\\toprule\\textbf{Artist} & \\textbf{Title} & \\textbf{Country} &\r\n             \\textbf{Points} & \\textbf{TV+JV}\\\\\\midrule,\r\n  table foot=\\bottomrule]\r\n{songcontest.csv}{}\r\n{\\Artist & \\itshape''\\Title'' & \\Country &\r\n \\bfseries\\the\\numexpr\\Televote+\\Juryvote\\relax & $(\\Televote+\\Juryvote)$}\r\n\r\n% \\end{document}\r\n```\r\nThe result after compilation with `(pdf)latex` is:\r\n\r\n![Table](images/exampletable.png)\r\n\r\n\r\n# License\r\n\r\nThis application is licensed under the\r\n[3-Clause (\"New\") BSD license](http://opensource.org/licenses/BSD-3-Clause).\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}